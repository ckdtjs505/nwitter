{"version":3,"sources":["components/Error.tsx","components/form/AuthForm.tsx","route/auth/style.tsx","route/auth/index.tsx"],"names":["loginException","errorValue","error","code","alert","console","log","message","AuthForm","useState","email","setEmail","password","setPassword","createNewAccount","setCreateNewAccount","setError","handleInput","e","target","name","value","hanldeSubmit","a","preventDefault","createUserWithEmailAndPassword","firebaseAuth","result","signInWithEmailAndPassword","onSubmit","type","onChange","placeholder","required","onClick","AuthFormDiv","styled","AuthLayout","div","Img","img","AuthBox","Subtitle","h2","Title","h1","Auth","src","draggable","size","signInWithPopup","googleLoginProvider","catch"],"mappings":"4LAAaA,EACX,aAAe,qBADJA,EAGJC,WAAa,SAACC,GACnB,OAAQA,EAAMC,MACZ,IAAK,sBAEHC,MAAM,iIACN,MACF,IAAK,sBACHA,MAAM,gIACN,MACF,QACEC,QAAQC,IAAIJ,GAIhB,OAAOA,EAAMK,S,+BC6DFC,EAxEY,WACzB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAgDJ,oBAAS,GAAzD,mBAAOK,EAAP,KAAyBC,EAAzB,KACA,EAA0BN,mBAAS,IAAnC,mBAAOP,EAAP,KAAcc,EAAd,KAGMC,EAAc,SAACC,GACG,YAAlBA,EAAEC,OAAOC,KACXT,EAASO,EAAEC,OAAOE,OACS,eAAlBH,EAAEC,OAAOC,MAClBP,EAAYK,EAAEC,OAAOE,QAKnBC,EAAY,uCAAG,WAAOJ,GAAP,eAAAK,EAAA,yDACnBL,EAAEM,iBADiB,UAKbV,EALa,gCAOAW,YAA+BC,IAAchB,EAAOE,GAPpD,OAOfe,EAPe,+CAUAC,YAA2BF,IAAchB,EAAOE,GAVhD,QAUfe,EAVe,eAYjBtB,QAAQC,IAAIqB,GAZK,kDAejBX,EAAShB,EAAeC,WAAf,OAfQ,0DAAH,sDAyBlB,OACE,qCACE,eAAC,IAAD,CAAW4B,SAAUP,EAArB,UACE,cAAC,IAAD,CACED,MAAOX,EACPU,KAAK,UACLU,KAAK,QACLC,SAAUd,EACVe,YAAa,qBACbC,UAAQ,IAGV,cAAC,IAAD,CACEZ,MAAOT,EACPQ,KAAK,aACLU,KAAK,WACLC,SAAUd,EACVe,YAAa,2BACbC,UAAQ,IAGV,cAAC,IAAD,CAAYb,KAAK,QAAQU,KAAK,SAA9B,SACGhB,EAAmB,8CAAa,0BAGnCA,EAAkF,GAA/D,cAAC,IAAD,CAAYoB,QA/BR,WAC3BnB,GAAoB,GACpBJ,EAAS,IACTE,EAAY,KA4BW,sCACrB,8BAAMX,GAAgB,S,QCtEfiC,EAAcC,YAAO5B,EAAP4B,CAAH,iDAIXC,EAAaD,IAAOE,IAAV,6NAYVC,EAAMH,IAAOI,IAAV,uIAUHC,EAAUL,IAAOE,IAAV,4IAQPI,EAAWN,IAAOO,GAAV,6IAORC,EAAQR,IAAOS,GAAV,6ICbHC,UAxBQ,WAQrB,OACE,eAACT,EAAD,WACE,cAACE,EAAD,CAAKQ,IAAI,+DAA+DC,UAAU,UAClF,eAACP,EAAD,WACE,cAAC,IAAD,CAAeQ,KAAK,WACpB,cAACL,EAAD,8BACA,cAACF,EAAD,oCACA,cAACP,EAAD,IACA,eAAC,IAAD,CAAYf,KAAK,SAASc,QAdL,WACzBgB,YAAgBxB,IAAcyB,KAAqBC,OAAM,SAAAlD,GACvDG,QAAQC,IAAIJ,OAYV,UACE,cAAC,IAAD,IADF","file":"static/js/4.fd543de2.chunk.js","sourcesContent":["export class loginException {\r\n  constructor() {}\r\n\r\n  static errorValue = (error: { code: string; message: string }) => {\r\n    switch (error.code) {\r\n      case \"auth/user-not-found\":\r\n        // TODO 로그인 페이지로 이동\r\n        alert(\"유저정보가 없습니다. 회원가입 후 이용해주세요\");\r\n        break;\r\n      case \"auth/wrong-password\":\r\n        alert(\"비밀번호가 잘못되었습니다. 다시 시도해주세요\");\r\n        break;\r\n      default:\r\n        console.log(error);\r\n        break;\r\n    }\r\n\r\n    return error.message;\r\n  };\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"@firebase/auth\";\r\nimport { loginException } from \"components/Error\";\r\nimport { firebaseAuth } from \"firebase\";\r\nimport { AuthButton, AuthInput, LoginForm } from \"./style\";\r\n\r\nconst AuthForm: React.FC = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [createNewAccount, setCreateNewAccount] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  // 아이디 비밀번호 입력시\r\n  const handleInput = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.name === \"elEmail\") {\r\n      setEmail(e.target.value);\r\n    } else if (e.target.name === \"elPassword\") {\r\n      setPassword(e.target.value);\r\n    }\r\n  };\r\n\r\n  // 로그인, 계정 생성 버튼\r\n  const hanldeSubmit = async (e: React.SyntheticEvent) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      let result;\r\n      if (createNewAccount) {\r\n        // 계정 생성\r\n        result = await createUserWithEmailAndPassword(firebaseAuth, email, password);\r\n      } else {\r\n        // 로그인\r\n        result = await signInWithEmailAndPassword(firebaseAuth, email, password);\r\n      }\r\n      console.log(result);\r\n    } catch (error) {\r\n      // TODO - Error 코드 파일로 빼기\r\n      setError(loginException.errorValue(error as { code: string; message: string }));\r\n    }\r\n  };\r\n\r\n  const handleClickCreateNew = () => {\r\n    setCreateNewAccount(true);\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <LoginForm onSubmit={hanldeSubmit}>\r\n        <AuthInput\r\n          value={email}\r\n          name=\"elEmail\"\r\n          type=\"email\"\r\n          onChange={handleInput}\r\n          placeholder={\"아이디\"}\r\n          required\r\n        ></AuthInput>\r\n\r\n        <AuthInput\r\n          value={password}\r\n          name=\"elPassword\"\r\n          type=\"password\"\r\n          onChange={handleInput}\r\n          placeholder={\"비밀번호\"}\r\n          required\r\n        ></AuthInput>\r\n\r\n        <AuthButton name=\"login\" type=\"submit\">\r\n          {createNewAccount ? \"아이디 생성하기\" : \"로그인\"}\r\n        </AuthButton>\r\n      </LoginForm>\r\n      {!createNewAccount ? <AuthButton onClick={handleClickCreateNew}>회원가입</AuthButton> : \"\"}\r\n      <div>{error ? error : \"\"}</div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import AuthForm from \"components/form/AuthForm\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const AuthFormDiv = styled(AuthForm)`\r\n  margin-top: 1rem;\r\n`;\r\n\r\nexport const AuthLayout = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n  justify-content: center;\r\n  @media (max-width: 860px) {\r\n    flex-direction: column-reverse;\r\n    width: 100%;\r\n    margin-top: 3rem;\r\n  }\r\n`;\r\n\r\nexport const Img = styled.img`\r\n  width: 60%;\r\n  height: 100vh;\r\n\r\n  @media (max-width: 860px) {\r\n    z-index: -1;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport const AuthBox = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  margin: auto;\r\n  margin-left: 2rem;\r\n`;\r\n\r\nexport const Subtitle = styled.h2`\r\n  font-size: 31px;\r\n  font-weight: 700;\r\n  text-decoration: none solid rgb(15, 20, 25);\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  font-size: 50px;\r\n  font-weight: 700;\r\n  text-decoration: none solid rgb(15, 20, 25);\r\n  margin-bottom: 2rem;\r\n`;\r\n","import React from \"react\";\r\nimport { signInWithPopup } from \"@firebase/auth\";\r\nimport { firebaseAuth, googleLoginProvider } from \"firebase\";\r\nimport { FcCloseUpMode, FcGoogle } from \"react-icons/fc\";\r\nimport { AuthBox, AuthFormDiv, AuthLayout, Img, Subtitle, Title } from \"./style\";\r\nimport { AuthButton } from \"components/form/style\";\r\n\r\nconst Auth: React.FC = () => {\r\n  // 소셜 로그인 버튼 클릭시\r\n  const onClickSocialLogin = () => {\r\n    signInWithPopup(firebaseAuth, googleLoginProvider).catch(error => {\r\n      console.log(error);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <AuthLayout>\r\n      <Img src=\"https://abs.twimg.com/sticky/illustrations/lohp_1302x955.png\" draggable=\"false\" />\r\n      <AuthBox>\r\n        <FcCloseUpMode size=\"2.5rem\" />\r\n        <Title> Happening now </Title>\r\n        <Subtitle> Join Nwitter today. </Subtitle>\r\n        <AuthFormDiv></AuthFormDiv>\r\n        <AuthButton name=\"Goggle\" onClick={onClickSocialLogin}>\r\n          <FcGoogle /> Google 계정으로 로그인하기\r\n        </AuthButton>\r\n      </AuthBox>\r\n    </AuthLayout>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n"],"sourceRoot":""}