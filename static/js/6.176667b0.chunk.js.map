{"version":3,"sources":["route/profile/style.tsx","components/modal/style.tsx","components/modal/index.tsx","route/profile/Profile.tsx"],"names":["ProfileDiv","styled","div","Msg","ProfileBox","ProfileBackground","ProfileInfo","ProfileImgBtn","ProfileImg","img","EditBtn","button","NickName","JoinTime","FollowBox","Modal","form","ModalBtnBox","CloseBtn","ModalTitle","SaveBtn","Dim","Input","input","ProfileModal","setIsEditMode","updateUserProfile","useState","newDisplayName","setNewDisplayName","handleNickSumbit","e","a","preventDefault","onSubmit","onClick","size","type","placeholder","value","onChange","target","Profile","userInfo","useContext","AuthContext","userNweets","setUserNweets","isEditMode","useEffect","onSnapshot","fireCollection","snapShot","nweets","docs","filter","ele","data","userId","firebaseAuth","currentUser","uid","map","id","createdAd","like","relay","parent","displayName","updateProfile","updateUser","where","userData","query","_query","getDocs","forEach","document","updateDoc","doc","firestore","userNickName","titleName","src","photoURL","alt","metadata","creationTime","length","sort","b","idx","Nweets","info","isOwner"],"mappings":"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","file":"static/js/6.176667b0.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const ProfileDiv = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 1rem;\r\n`;\r\n\r\nexport const Msg = styled.div`\r\n  margin-top: 5rem;\r\n  font-size: 1.2rem;\r\n  text-align: center;\r\n`;\r\nexport const ProfileBox = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  div {\r\n    padding-bottom: 0.5rem;\r\n  }\r\n`;\r\nexport const ProfileBackground = styled.div`\r\n  height: 10rem;\r\n  background-color: #cfd9de;\r\n`;\r\nexport const ProfileInfo = styled.div`\r\n  padding: 0.5rem;\r\n`;\r\nexport const ProfileImgBtn = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n`;\r\nexport const ProfileImg = styled.img`\r\n  width: 80px;\r\n  height: 80px;\r\n  border: 2px solid white;\r\n  border-radius: 5rem;\r\n  margin-top: -60px;\r\n`;\r\nexport const EditBtn = styled.button`\r\n  background: none;\r\n  border: soild 1px #cfd9de;\r\n  height: 24px;\r\n  border-radius: 2rem;\r\n`;\r\nexport const NickName = styled.div`\r\n  font-size: 1.3rem;\r\n  font-weight: 600;\r\n`;\r\nexport const JoinTime = styled.div`\r\n  font-size: 0.8rem;\r\n  color: #cfd9de;\r\n`;\r\nexport const FollowBox = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n\r\n  div {\r\n    margin-right: 1rem;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Modal = styled.form`\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  background: white;\r\n  width: 50%;\r\n  /* height: 5%; */\r\n  border-radius: 1rem;\r\n`;\r\n\r\nexport const ModalBtnBox = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: left;\r\n\r\n  text-align: center;\r\n  height: 50px;\r\n  border-bottom: solid 1px #cfd9de;\r\n`;\r\n\r\nexport const CloseBtn = styled.button`\r\n  background: none;\r\n  border: none;\r\n  padding-left: 1rem;\r\n  margin-top: auto;\r\n  margin-bottom: auto;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const ModalTitle = styled.div`\r\n  font-size: 1rem;\r\n  margin-left: 1rem;\r\n  margin-top: auto;\r\n  margin-bottom: auto;\r\n  font-weight: 700;\r\n`;\r\n\r\nexport const SaveBtn = styled.button`\r\n  margin-left: auto;\r\n  margin-right: 1rem;\r\n  margin-top: auto;\r\n  margin-bottom: auto;\r\n  background: black;\r\n  height: 25px;\r\n  border: none;\r\n  border-radius: 1rem;\r\n  color: white;\r\n  width: 4rem;\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const Dim = styled.div`\r\n  position: fixed;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(0, 0, 0, 0.4);\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  width: 80%;\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { GrFormClose } from \"react-icons/gr\";\r\nimport { ProfileDiv } from \"route/profile/style\";\r\nimport { CloseBtn, Dim, Input, Modal, ModalBtnBox, ModalTitle, SaveBtn } from \"./style\";\r\n\r\ninterface Props {\r\n  setIsEditMode: any;\r\n  updateUserProfile: any;\r\n}\r\n\r\nexport const ProfileModal: React.FC<Props> = ({ setIsEditMode, updateUserProfile }) => {\r\n  const [newDisplayName, setNewDisplayName] = useState(\"\");\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const {\r\n      target: { value }\r\n    } = e;\r\n    setNewDisplayName(value);\r\n  };\r\n\r\n  const handleNickSumbit = async (e: React.SyntheticEvent) => {\r\n    e.preventDefault();\r\n    updateUserProfile(newDisplayName);\r\n    setIsEditMode(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Dim></Dim>\r\n      <Modal onSubmit={handleNickSumbit}>\r\n        <div>\r\n          <ModalBtnBox>\r\n            <CloseBtn\r\n              onClick={() => {\r\n                setIsEditMode(false);\r\n              }}\r\n            >\r\n              <GrFormClose size={\"20px\"} />\r\n            </CloseBtn>\r\n            <ModalTitle> Edit Profile </ModalTitle>\r\n            <SaveBtn type={\"submit\"}> Save </SaveBtn>\r\n          </ModalBtnBox>\r\n\r\n          <div>\r\n            <ProfileDiv>\r\n              <label>name</label>\r\n              <Input\r\n                placeholder=\"닉네임을 입력\"\r\n                value={newDisplayName ? newDisplayName : \"\"}\r\n                onChange={handleChange}\r\n              ></Input>\r\n            </ProfileDiv>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { doc, getDocs, onSnapshot, query, updateDoc, where } from \"@firebase/firestore\";\r\nimport { firebaseAuth, fireCollection, firestore } from \"firebase\";\r\nimport { updateProfile } from \"@firebase/auth\";\r\nimport Nweets from \"components/nweet/Nweets\";\r\nimport { AuthContext } from \"context/context\";\r\nimport { NweetsType } from \"models/nweetType\";\r\nimport {\r\n  EditBtn,\r\n  FollowBox,\r\n  JoinTime,\r\n  Msg,\r\n  NickName,\r\n  ProfileBackground,\r\n  ProfileBox,\r\n  ProfileImg,\r\n  ProfileImgBtn,\r\n  ProfileInfo\r\n} from \"./style\";\r\nimport { LayoutContents } from \"components/layout\";\r\nimport { ProfileModal } from \"components/modal\";\r\n\r\nconst Profile: React.FC = () => {\r\n  const userInfo = useContext(AuthContext);\r\n  const [userNweets, setUserNweets] = useState<NweetsType[]>([]);\r\n  const [isEditMode, setIsEditMode] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // 자신이 올린 Nweets 모아보기\r\n    onSnapshot(fireCollection, snapShot => {\r\n      const nweets: NweetsType[] = snapShot.docs\r\n        .filter(ele => ele.data().userId === firebaseAuth.currentUser?.uid)\r\n        .map(ele => {\r\n          return {\r\n            id: ele.id,\r\n            createdAd: ele.data().createdAd,\r\n            like: ele.data().like,\r\n            relay: ele.data().relay,\r\n            parent: ele.data().parent,\r\n            ...ele.data()\r\n          };\r\n        });\r\n\r\n      setUserNweets(nweets);\r\n    });\r\n  }, []);\r\n\r\n  const updateUserProfile = async (newDisplayName: string) => {\r\n    if (newDisplayName === firebaseAuth.currentUser?.displayName) return;\r\n    if (firebaseAuth.currentUser) {\r\n      await updateProfile(firebaseAuth.currentUser, { displayName: newDisplayName });\r\n      await userInfo?.updateUser(newDisplayName);\r\n    }\r\n\r\n    // 닉네임이 업데이트 되면 리스트 데이터의 닉네임도 다 같이 변경되어야함\r\n    const userData = await where(\"userId\", \"==\", firebaseAuth.currentUser?.uid);\r\n    const _query = await query(fireCollection, userData);\r\n    const querySnapshot = await getDocs(_query);\r\n    querySnapshot.forEach(document => {\r\n      updateDoc(doc(firestore, `nweets/${document.id}`), {\r\n        userNickName: newDisplayName\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <LayoutContents titleName={\"Profile\"}>\r\n      <ProfileBox>\r\n        <ProfileBackground> </ProfileBackground>\r\n\r\n        <ProfileInfo>\r\n          <ProfileImgBtn>\r\n            <ProfileImg\r\n              src={\r\n                firebaseAuth.currentUser?.photoURL\r\n                  ? firebaseAuth.currentUser?.photoURL\r\n                  : \"assets/default.png\"\r\n              }\r\n              alt=\"photo\"\r\n            />\r\n            <EditBtn onClick={() => setIsEditMode(!isEditMode)}>edit profile</EditBtn>\r\n          </ProfileImgBtn>\r\n\r\n          <NickName>{firebaseAuth.currentUser?.displayName}</NickName>\r\n          <JoinTime>{firebaseAuth.currentUser?.metadata.creationTime}</JoinTime>\r\n          <FollowBox>\r\n            <div> 0 Following</div>\r\n            <div> 0 Followers</div>\r\n          </FollowBox>\r\n        </ProfileInfo>\r\n      </ProfileBox>\r\n\r\n      {/* <div>\r\n        <nav>\r\n          <ul>\r\n            <li>Tweets</li>\r\n            <li>Tweets &amp; replies</li>\r\n            <li>Media</li>\r\n            <li>Likes</li>\r\n          </ul>\r\n        </nav>\r\n\r\n        <div>contents</div>\r\n      </div> */}\r\n\r\n      <div>\r\n        {userNweets.length === 0 ? (\r\n          <Msg>\r\n            작성된 Nweets이 없습니다 <br />\r\n          </Msg>\r\n        ) : (\r\n          userNweets\r\n            .sort((a, b) => (b.createdAd > a.createdAd ? 1 : -1))\r\n            .map((ele, idx) => {\r\n              return (\r\n                <Nweets\r\n                  key={idx}\r\n                  info={ele}\r\n                  isOwner={ele.userId === firebaseAuth.currentUser?.uid}\r\n                />\r\n              );\r\n            })\r\n        )}\r\n      </div>\r\n\r\n      {isEditMode ? (\r\n        <ProfileModal setIsEditMode={setIsEditMode} updateUserProfile={updateUserProfile} />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </LayoutContents>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"],"sourceRoot":""}